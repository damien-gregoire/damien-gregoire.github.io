{"version":3,"sources":["components/Header.jsx","components/Experience.jsx"],"names":["Header","props","title","_jsx","className","children","styles","ulStyle","listStylePosition","paddingLeft","lineHeight","subtitleContainerStyle","marginTop","marginBottom","subtitleStyle","display","inlineChild","itemStyle","Experience","theme","useContext","ThemeContext","header","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","fetch","endpoints","experiences","method","then","res","json","catch","err","_jsxs","_Fragment","Container","Timeline","lineColor","timelineLineColor","map","item","TimelineItem","dateText","dateInnerStyle","background","accentColor","style","bodyContainerStyle","color","_objectSpread","subtitle","workType","workDescription","point","ReactMarkdown","components","p","FallbackSpinner"],"mappings":"8IAAA,6BAaeA,UATf,SAAgBC,GACd,IAAQC,EAAUD,EAAVC,MACR,OAAOC,cAAA,OAAKC,UAAU,SAAQC,SAAEH,GAClC,C,6ICIMI,EAAS,CACbC,QAAS,CACPC,kBAAmB,UACnBC,YAAa,GACbC,WAAY,GAEdC,uBAAwB,CACtBC,UAAW,GACXC,aAAc,IAEhBC,cAAe,CACbC,QAAS,gBAEXC,YAAa,CACXD,QAAS,gBAEXE,UAAW,CACTJ,aAAc,KAiFHK,UA7Ef,SAAoBjB,GAClB,IAAMkB,EAAQC,qBAAWC,KACjBC,EAAWrB,EAAXqB,OACRC,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAWpB,OATAI,qBAAU,WACRC,MAAMC,IAAUC,YAAa,CAC3BC,OAAQ,QAEPC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACC,GAAG,OAAKP,EAAQO,EAAIH,YAAY,IACtCK,OAAM,SAACC,GAAG,OAAKA,CAAG,GACvB,GAAG,IAGDC,eAAAC,WAAA,CAAAnC,SAAA,CACEF,cAACH,UAAM,CAACE,MAAOoB,IAEdK,EAEGxB,cAAA,OAAKC,UAAU,4BAA2BC,SACxCF,cAACsC,IAAS,CAAApC,SACRF,cAACuC,WAAQ,CACPC,UAAWxB,EAAMyB,kBAAkBvC,SAElCsB,EAAKkB,KAAI,SAACC,GAAI,OACbP,eAACQ,eAAY,CAEXC,SAAUF,EAAKE,SACfC,eAAgB,CAAEC,WAAY/B,EAAMgC,aACpCC,MAAO9C,EAAOW,UACdoC,mBAAoB,CAAEC,MAAOnC,EAAMmC,OAAQjD,SAAA,CAE3CF,cAAA,MAAIC,UAAU,aAAYC,SACvByC,EAAK5C,QAERqC,eAAA,OAAKa,MAAO9C,EAAOK,uBAAuBN,SAAA,CACxCF,cAAA,MAAIiD,MAAKG,wBAAA,GAAOjD,EAAOQ,eAAa,IAAEwC,MAAOnC,EAAMgC,cAAc9C,SAC9DyC,EAAKU,WAEPV,EAAKW,UACNlB,eAAA,MAAIa,MAAO9C,EAAOU,YAAYX,SAAA,CAAC,WAE5B,IACAyC,EAAKW,eAIVtD,cAAA,MAAIiD,MAAO9C,EAAOC,QAAQF,SACvByC,EAAKY,gBAAgBb,KAAI,SAACc,GAAK,OAC9BpB,eAAA,OAAAlC,SAAA,CACEF,cAAA,MAAAE,SACEF,cAACyD,IAAa,CACZvD,SAAUsD,EACVE,WAAY,CACVC,EAAG,YAIT3D,cAAA,WATQwD,EAUJ,QAjCLb,EAAK5C,MAAQ4C,EAAKE,SAoCV,UAKrB7C,cAAC4D,UAAe,MAG5B,C","file":"static/js/7.55cbc4f2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\nimport { Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport FallbackSpinner from './FallbackSpinner';\nimport '../css/experience.css';\n\nconst styles = {\n  ulStyle: {\n    listStylePosition: 'outside',\n    paddingLeft: 20,\n    lineHeight: 1,\n  },\n  subtitleContainerStyle: {\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  subtitleStyle: {\n    display: 'inline-block',\n  },\n  inlineChild: {\n    display: 'inline-block',\n  },\n  itemStyle: {\n    marginBottom: 10,\n  },\n};\n\nfunction Experience(props) {\n  const theme = useContext(ThemeContext);\n  const { header } = props;\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch(endpoints.experiences, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res.experiences))\n      .catch((err) => err);\n  }, []);\n\n  return (\n    <>\n      <Header title={header} />\n\n      {data\n        ? (\n          <div className=\"section-content-container\">\n            <Container>\n              <Timeline\n                lineColor={theme.timelineLineColor}\n              >\n                {data.map((item) => (\n                  <TimelineItem\n                    key={item.title + item.dateText}\n                    dateText={item.dateText}\n                    dateInnerStyle={{ background: theme.accentColor }}\n                    style={styles.itemStyle}\n                    bodyContainerStyle={{ color: theme.color }}\n                  >\n                    <h3 className=\"item-title\">\n                      {item.title}\n                    </h3>\n                    <div style={styles.subtitleContainerStyle}>\n                      <h4 style={{ ...styles.subtitleStyle, color: theme.accentColor }}>\n                        {item.subtitle}\n                      </h4>\n                      {item.workType && (\n                      <h5 style={styles.inlineChild}>\n                  &nbsp;Â·\n                        {' '}\n                        {item.workType}\n                      </h5>\n                      )}\n                    </div>\n                    <ul style={styles.ulStyle}>\n                      {item.workDescription.map((point) => (\n                        <div key={point}>\n                          <li>\n                            <ReactMarkdown\n                              children={point}\n                              components={{\n                                p: 'span',\n                              }}\n                            />\n                          </li>\n                          <br />\n                        </div>\n                      ))}\n                    </ul>\n                  </TimelineItem>\n                ))}\n              </Timeline>\n            </Container>\n          </div>\n        ) : <FallbackSpinner /> }\n    </>\n  );\n}\n\nExperience.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Experience;\n"],"sourceRoot":""}