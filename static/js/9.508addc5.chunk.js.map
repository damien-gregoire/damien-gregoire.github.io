{"version":3,"sources":["components/Header.jsx","components/Skills.jsx"],"names":["Header","props","title","_jsx","className","children","ChartJS","register","RadialLinearScale","PointElement","LineElement","Filler","Tooltip","Legend","defaults","backgroundColor","borderColor","color","borderWidth","styles","iconStyle","height","width","margin","marginBottom","introTextContainer","whiteSpace","fontSize","Skills","intro","header","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","fetch","endpoints","skills","method","then","res","json","catch","err","_jsxs","_Fragment","Fade","Container","style","ReactMarkdown","Row","map","skill","newData","labels","items","item","label","datasets","value","Col","xl","lg","sm","xs","Radar","options","maintainAspectRatio","crypto","randomUUID","showChart","FallbackSpinner"],"mappings":"wHAAA,6BAaeA,UATf,SAAgBC,GACd,IAAQC,EAAUD,EAAVC,MACR,OAAOC,cAAA,OAAKC,UAAU,SAAQC,SAAEH,GAClC,C,iKCaAI,IAAQC,SACNC,IACAC,IACAC,IACAC,IACAC,IACAC,KAGFP,IAAQQ,SAASC,gBAAkB,0BACnCT,IAAQQ,SAASE,YAAc,wBAC/BV,IAAQQ,SAASG,MAAQ,OACzBX,IAAQQ,SAASI,YAAc,IAE/B,IAAMC,EAAS,CACbC,UAAW,CACTC,OAAQ,GACRC,MAAO,GACPC,OAAQ,GACRC,aAAc,GAEhBC,mBAAoB,CAClBC,WAAY,WACZC,SAAU,UAiECC,UA7Cf,SAAgB3B,GACd,IAI2B4B,EAJnBC,EAAW7B,EAAX6B,OAERC,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAiBpB,OATAI,qBAAU,WACRC,MAAMC,IAAUC,OAAQ,CACtBC,OAAQ,QAEPC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACC,GAAG,OAAKP,EAAQO,EAAI,IAC1BE,OAAM,SAACC,GAAG,OAAKA,CAAG,GACvB,GAAG,IAGDC,eAAAC,WAAA,CAAA3C,SAAA,CACEF,cAACH,UAAM,CAACE,MAAO4B,IACdK,EACChC,cAAC8C,IAAI,CAAA5C,SACHF,cAAA,OAAKC,UAAU,4BAA2BC,SACxC0C,eAACG,IAAS,CAAA7C,SAAA,EArBOwB,EAsBIM,EAAKN,MArBlC1B,cAAA,MAAIgD,MAAOhC,EAAOM,mBAAmBpB,SACnCF,cAACiD,IAAa,CAAC/C,SAAUwB,OAqBjB1B,cAAA,SACAA,cAAA,SACAA,cAACkD,IAAG,CAAAhD,SACD8B,EAAKK,OAAOc,KAAI,SAACC,GAAK,OA/CvC,SAAmBA,GACjB,IAAMC,EAAU,CACdC,OAAQF,EAAMG,MAAMJ,KAAI,SAACK,GAAI,OAAKA,EAAKC,KAAK,IAC5CC,SAAU,CACR,CACED,MAAOL,EAAMrD,MACbiC,KAAMoB,EAAMG,MAAMJ,KAAI,SAACK,GAAI,OAAKA,EAAKG,KAAK,OAG7C,OACD3D,cAAC4D,IAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG9D,SAC/BF,cAACiE,IAAK,CAACjC,KAAMqB,EAASlC,MAAO,IAAKD,OAAQ,IAAKgD,QAAS,CAAEC,qBAAqB,MAD1CC,OAAOC,aAIlD,CAiC4CC,CAAUlB,EAAM,aAKlDpD,cAACuE,UAAe,MAG1B,C","file":"static/js/9.508addc5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import {\n  Chart as ChartJS,\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  Filler,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Radar } from 'react-chartjs-2';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\nimport Fade from 'react-reveal';\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport FallbackSpinner from './FallbackSpinner';\n\nChartJS.register(\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  Filler,\n  Tooltip,\n  Legend,\n);\n\nChartJS.defaults.backgroundColor = 'rgb(100, 153, 233, 0.2)';\nChartJS.defaults.borderColor = 'rgb(100, 153, 233, 1)';\nChartJS.defaults.color = '#000';\nChartJS.defaults.borderWidth = 0.25;\n\nconst styles = {\n  iconStyle: {\n    height: 75,\n    width: 75,\n    margin: 10,\n    marginBottom: 0,\n  },\n  introTextContainer: {\n    whiteSpace: 'pre-wrap',\n    fontSize: '1.2em',\n  },\n};\n\nfunction showChart(skill) {\n  const newData = {\n    labels: skill.items.map((item) => item.label),\n    datasets: [\n      {\n        label: skill.title,\n        data: skill.items.map((item) => item.value),\n      },\n    ],\n  }; return (\n    <Col xl={4} lg={4} sm={6} xs={12} key={crypto.randomUUID()}>\n      <Radar data={newData} width={400} height={400} options={{ maintainAspectRatio: false }} />\n    </Col>\n  );\n}\n\nfunction Skills(props) {\n  const { header } = props;\n\n  const [data, setData] = useState(null);\n\n  const renderSkillsIntro = (intro) => (\n    <h4 style={styles.introTextContainer}>\n      <ReactMarkdown children={intro} />\n    </h4>\n  );\n\n  useEffect(() => {\n    fetch(endpoints.skills, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => err);\n  }, []);\n\n  return (\n    <>\n      <Header title={header} />\n      {data ? (\n        <Fade>\n          <div className=\"section-content-container\">\n            <Container>\n              {renderSkillsIntro(data.intro)}\n              <br />\n              <br />\n              <Row>\n                {data.skills.map((skill) => showChart(skill))}\n              </Row>\n            </Container>\n          </div>\n        </Fade>\n      ) : <FallbackSpinner /> }\n    </>\n  );\n}\n\nSkills.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Skills;\n"],"sourceRoot":""}